#!/bin/bash

#Bash script that changes the cyan unit fan speeds depending on
#the temperatures of the RF boards
#Any log or info flag output can be found in
# /var/log/cyan_temp

#Board Power Status Variables
BOARD_ON='on'

#Tempurature Case Values
HRD_MIN=25
MIN=30
MED=35
MAX=40

#Fan levels
HRDMIN_LVL=0
MIN_LVL=1
MED_LVL=2
HIGH_LVL=3
MAX_LVL=4

#Logs File location:
LOG_LOCATION='/var/log/cyan_temp'
LOG=0
LOG_THRESH=0
INFO=0

#Delay needed between writing to a state variable and reading
PEEK_POKE_DELAY=0.1

########
# Main Program
########
echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" CYAN FAN CONTROLLER STARTED >> $LOG_LOCATION

while [ $# -gt 0 ]; do
	case $1 in
	-i | --info)
		INFO=1
	echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" ALL LOGGING ENABLED  >> $LOG_LOCATION
		;;
	-l | --log)
		if [[ $2 =~ ^[0-9]+$ ]] ; then
			LOG=1
			LOG_THRESH=$2
			echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" LOGGING TEMPS ABOVE: "$LOG_THRESH" degC >> $LOG_LOCATION
		else
			echo "Temperature log threshold must be an integer above 0"
			exit 1
		fi
		;;
	esac
	shift
done


while true; do

	# Current fan level
	FAN_LVL=$HRDMIN_LVL

#-----------------------------------------RX BOARDS-----------------------------------------
	rx_boards=($(ls /var/cyan/state | grep rx_))
	for rx in ${rx_boards[*]}; do
		echo 1 > "/var/cyan/state/$rx/board/temp"
		sleep $PEEK_POKE_DELAY
		temp=$(cat "/var/cyan/state/$rx/board/temp" | sed -n '1 p' | cut -d : -f 2 | cut -d C -f 1 | tr -d [:blank:])
		if [[ "$INFO" -eq 1 ]] || [[ "$LOG" -eq 1 && "$NUM_TEMP_RX" -gt "$LOG_THRESH" ]]; then
			echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" $rx Temp "$temp" degC >> $LOG_LOCATION
		fi

		#Increase fan level based on thresholds
		if [[ "$NUM_TEMP_RX" -gt "$HARD_MIN" && "$NUM_TEMP_RX" -lt "$MIN" ]]; then
			if [[ "$FAN_LVL" -lt "$MIN_LVL" ]]; then
				FAN_LVL=$MIN_LVL
			fi


		elif [[ "$NUM_TEMP_RX" -lt "$MED" ]]; then
			if [[ "$FAN_LVL" -lt "$MED_LVL" ]]; then
				FAN_LVL=$MED_LVL
			fi

		elif [[ "$NUM_TEMP_RX" -lt "$MAX" ]]; then
			if [[ "$FAN_LVL" -lt "$HIGH_LVL" ]]; then
				FAN_LVL=$HIGH_LVL
			fi

		else
			FAN_LVL=$MAX_LVL
		fi
	done

#-----------------------------------------TX BOARDS-----------------------------------------
	tx_boards=($(ls /var/cyan/state | grep tx_))
	for tx in ${tx_boards[*]}; do
		echo 1 > "/var/cyan/state/$tx/board/temp"
		sleep $PEEK_POKE_DELAY
		mapfile -t tx_temp_arr < <(cat "/var/cyan/state/$tx/board/temp")

		#Getting the Temp Values for each thermistor
		TX_TEMP_A0=${tx_temp_arr[0]//[^0-9]/}
		TX_TEMP_A0="${TX_TEMP_A0:1}"
		TX_TEMP_A1=${tx_temp_arr[1]//[^0-9]/}
		TX_TEMP_A1="${TX_TEMP_A1:1}"

		if [[ "$INFO" -eq 1 ]] || [[ "$LOG" -eq 1 && ( "$TX_TEMP_A0" -gt "$LOG_THRESH" || "$TX_TEMP_A1" -gt "$LOG_THRESH" ) ]]; then
			echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" $tx Temp0 "$TX_TEMP_A0" degC Temp1 "$TX_TEMP_A1" degC >> $LOG_LOCATION
		fi

		#Increase fan level based on thresholds
		if [[ "$TX_TEMP_A0" -gt "$HARD_MIN" && "$TX_TEMP_A0" -lt "$MIN" && "$TX_TEMP_A1" -gt "$HARD_MIN" && "$TX_TEMP_A1" -lt "$MIN" ]]; then
			if [[ "$FAN_LVL" -lt "$MIN_LVL" ]]; then
				FAN_LVL=$MIN_LVL
			fi

		elif [[ "$TX_TEMP_A0" -lt "$MED" && "$TX_TEMP_A1" -lt "$MED" ]]; then
			if [[ "$FAN_LVL" -lt "$MED_LVL" ]]; then
				FAN_LVL=$MED_LVL
			fi

		elif [[ "$TX_TEMP_A0" -lt "$MAX" && "$TX_TEMP_A1" -lt "$MAX"  ]]; then
			if [[ "$FAN_LVL" -lt "$HIGH_LVL" ]]; then
				FAN_LVL=$HIGH_LVL
			fi

		else
			FAN_LVL=$MAX_LVL
		fi
	done


#-----------------------------------------TIME BOARD-----------------------------------------
	echo 1 > /var/cyan/state/time/board/temp
	sleep $PEEK_POKE_DELAY
	mapfile -t time_temp_arr < <(cat /var/cyan/state/time/board/temp)

	#Getting the Temp Values for each thermistor
	TIME_TEMP_A0=${time_temp_arr[0]//[^0-9]/}
	TIME_TEMP_A0="${TIME_TEMP_A0:1}"
	TIME_TEMP_A1=${time_temp_arr[1]//[^0-9]/}
	TIME_TEMP_A1="${TIME_TEMP_A1:1}"

	if [[ "$INFO" -eq 1 ]] || [[ "$LOG" -eq 1 && ( "$TIME_TEMP_A0" -gt "$LOG_THRESH" || "$TIME_TEMP_A1" -gt "$LOG_THRESH" ) ]]; then
		echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" TIME Temp0 "$TIME_TEMP_A0" degC Temp1 "$TIME_TEMP_A1" degC >> $LOG_LOCATION
	fi

	#Increase fan level based on thresholds
	if [[ "$TIME_TEMP_A0" -gt "$HARD_MIN" && "$TIME_TEMP_A0" -lt "$MIN" && "$TIME_TEMP_A1" -gt "$HARD_MIN" && "$TIME_TEMP_A1" -lt "$MIN" ]]; then
		if [[ "$FAN_LVL" -lt "$MIN_LVL" ]]; then
			FAN_LVL=$MIN_LVL
		fi

	elif [[ "$TIME_TEMP_A0" -lt "$MED" && "$TIME_TEMP_A1" -lt "$MED" ]]; then
		if [[ "$FAN_LVL" -lt "$MED_LVL" ]]; then
			FAN_LVL=$MED_LVL
		fi

	elif [[ "$TIME_TEMP_A0" -lt "$MAX" && "$TIME_TEMP_A1" -lt "$MAX"  ]]; then
		if [[ "$FAN_LVL" -lt "$HIGH_LVL" ]]; then
			FAN_LVL=$HIGH_LVL
		fi
	else
		FAN_LVL=$MAX_LVL
	fi

#-----------------------------------------DIGITAL BOARD-----------------------------------------
	echo 1 > /var/cyan/state/fpga/board/digtemp
	sleep $PEEK_POKE_DELAY
	DIG_TEMP0=$(cat /var/cyan/state/fpga/board/digtemp | sed -n '1 p' | cut -d : -f 2 | tr -d [:blank:] )
	DIG_TEMP1=$(cat /var/cyan/state/fpga/board/digtemp | sed -n '2 p' | cut -d : -f 2 | tr -d [:blank:] )
	DIG_TEMP2=$(cat /var/cyan/state/fpga/board/digtemp | sed -n '3 p' | cut -d : -f 2 | tr -d [:blank:] )

	if [[ "$INFO" -eq 1 ]] || [[ "$LOG" -eq 1 && ( "$DIG_TEMP0" -gt "$LOG_THRESH" || "$DIG_TEMP1" -gt "$LOG_THRESH" || "$DIG_TEMP2" -gt "$LOG_THRESH" ) ]]; then
		echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" DIG Temp0 "$DIG_TEMP0" degC Temp1 "$DIG_TEMP1" degC Temp2 "$DIG_TEMP2" degC >> $LOG_LOCATION
	fi

	#Increase fan level based on thresholds
	if [[ "$DIG_TEMP0" -gt "$HARD_MIN" && "$DIG_TEMP0" -lt "$MIN" && "$DIG_TEMP1" -gt "$HARD_MIN" && "$DIG_TEMP1" -lt "$MIN" && "$DIG_TEMP2" -gt "$HARD_MIN" && "$DIG_TEMP2" -lt "$MIN"  ]]; then
		if [[ "$FAN_LVL" -lt "$MIN_LVL" ]]; then
			FAN_LVL=$MIN_LVL
		fi

	elif [[ "$DIG_TEMP0" -lt "$MED" && "$DIG_TEMP1" -lt "$MED" && "$DIG_TEMP2" -lt "$MED" ]]; then
		if [[ "$FAN_LVL" -lt "$MED_LVL" ]]; then
			FAN_LVL=$MED_LVL
		fi

	elif [[ "$DIG_TEMP0" -lt "$MAX" && "$DIG_TEMP1" -lt "$MAX" && "$DIG_TEMP2" -lt "$MAX" ]]; then
		if [[ "$FAN_LVL" -lt "$HIGH_LVL" ]]; then
			FAN_LVL=$HIGH_LVL
		fi

	else
		FAN_LVL=$MAX_LVL
	fi

#-----------------------------------------POWER BOARD-----------------------------------------
	echo 1 > /var/cyan/state/power/board/temp
	sleep $PEEK_POKE_DELAY
	PWR_TEMP0=$(cat /var/cyan/state/power/board/temp | sed -n '1 p' | cut -d : -f 2 | tr -d [:blank:] )
	PWR_TEMP1=$(cat /var/cyan/state/power/board/temp | sed -n '2 p' | cut -d : -f 2 | tr -d [:blank:] )
	PWR_TEMP2=$(cat /var/cyan/state/power/board/temp | sed -n '3 p' | cut -d : -f 2 | tr -d [:blank:] )

	if [[ "$INFO" -eq 1 ]] || [[ "$LOG" -eq 1 && ( "$PWR_TEMP0" -gt "$LOG_THRESH" || "$PWR_TEMP1" -gt "$LOG_THRESH" || "$PWR_TEMP2" -gt "$LOG_THRESH" ) ]]; then
		echo "$(date +%Y%m%dT%H%M.%N)" "$(basename "$0")" PWR Temp0 "$PWR_TEMP0" degC Temp1 "$PWR_TEMP1" degC Temp2 "$PWR_TEMP2" degC >> $LOG_LOCATION
	fi

	#Increase fan level based on thresholds
	if [[ "$PWR_TEMP0" -gt "$HARD_MIN" && "$PWR_TEMP0" -lt "$MIN" && "$PWR_TEMP1" -gt "$HARD_MIN" && "$PWR_TEMP1" -lt "$MIN" && "$PWR_TEMP2" -gt "$HARD_MIN" && "$PWR_TEMP2" -lt "$MIN"  ]]; then
		if [[ "$FAN_LVL" -lt "$MIN_LVL" ]]; then
			FAN_LVL=$MIN_LVL
		fi

	elif [[ "$PWR_TEMP0" -lt "$MED" && "$PWR_TEMP1" -lt "$MED" && "$PWR_TEMP2" -lt "$MED" ]]; then
		if [[ "$FAN_LVL" -lt "$MED_LVL" ]]; then
			FAN_LVL=$MED_LVL
		fi

	elif [[ "$PWR_TEMP0" -lt "$MAX" && "$PWR_TEMP1" -lt "$MAX" && "$PWR_TEMP2" -lt "$MAX" ]]; then
		if [[ "$FAN_LVL" -lt "$HIGH_LVL" ]]; then
			FAN_LVL=$HIGH_LVL
		fi

	else
		FAN_LVL=$MAX_LVL
	fi

#-----------------------------------------FAN CONTROL-----------------------------------------
	case $FAN_LVL in
		4)
			echo "$(/etc/cyan/fanctl full)" > /dev/null
		;;
		0)
			echo "$(/etc/cyan/fanctl low)" > /dev/null
		;;
		1)
			echo "$(/etc/cyan/fanctl medium)" > /dev/null
		;;
		2)
			echo "$(/etc/cyan/fanctl medium-high)" > /dev/null
		;;
		3)
			echo "$(/etc/cyan/fanctl high)" > /dev/null
		;;
	esac

	sleep 15
done
